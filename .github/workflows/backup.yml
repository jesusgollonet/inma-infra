# ssh into the instance and backup to s3 bucket
#
#
name: backup

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  backup:
    runs-on: ubuntu-latest
    steps:
    - name: back up instance 
      uses: appleboy/ssh-action@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        BACKUP_BUCKET_NAME: ${{ secrets.BACKUP_BUCKET_NAME }}
        WORDPRESS_DB_HOST: ${{ secrets.WORDPRESS_DB_HOST }}
        WORDPRESS_DB_USER: ${{ secrets.WORDPRESS_DB_USER }}
        WORDPRESS_DB_PASSWORD: ${{ secrets.WORDPRESS_DB_PASSWORD }}
        WORDPRESS_DB_NAME: ${{ secrets.WORDPRESS_DB_NAME }}
      with:
        host: ${{ secrets.SERVER_IP }} 
        username: root
        key: ${{ secrets.SSH_KEY }}
        envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,BACKUP_BUCKET_NAME,WORDPRESS_DB_HOST,WORDPRESS_DB_USER,WORDPRESS_DB_PASSWORD,WORDPRESS_DB_NAME
        script: |
          docker cp wp1:/var/www/html/wp-content .
          docker exec "$WORDPRESS_DB_HOST" mariadb-dump -u "$WORDPRESS_DB_USER" -p"$WORDPRESS_DB_PASSWORD" "$WORDPRESS_DB_NAME" > backup.sql

          rm -r wp-content/cache

          docker run --rm \
            -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
            -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
            -e BACKUP_BUCKET_NAME="$BACKUP_BUCKET_NAME" \
            -v $(pwd):/backup amazon/aws-cli s3 cp /backup/backup.sql s3://$BACKUP_BUCKET_NAME/backup.sql
          docker run --rm \
            -e AWS_ACCESS_KEY_ID="$AWS_ACCESS_KEY_ID" \
            -e AWS_SECRET_ACCESS_KEY="$AWS_SECRET_ACCESS_KEY" \
            -e BACKUP_BUCKET_NAME="$BACKUP_BUCKET_NAME" \
            -v $(pwd):/backup amazon/aws-cli s3 sync /backup/wp-content s3://$BACKUP_BUCKET_NAME/wp-content
